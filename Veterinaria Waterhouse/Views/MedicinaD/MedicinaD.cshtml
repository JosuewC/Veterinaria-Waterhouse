@model Veterinaria_Waterhouse.Models.Medicina

@{
    Layout = null;
    string imagenPath = Url.Content($"~/imagines/{Model.NombreMedicina.ToLower().Replace(" ", "_").Replace("á", "a").Replace("é", "e").Replace("í", "i").Replace("ó", "o").Replace("ú", "u").Replace("ñ", "n")}.jpg");
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/MedicinaD.css">
    <title>Detalles de la Medicina</title>
</head>
<body>
    <div class="container">
        <button class="back-button" onclick="history.back()">
            <i class="fas fa-arrow-left"></i>
        </button>

        <!-- Imagen de la medicina -->
        <div class="image-container">
            <img src="@imagenPath" alt="@Model.NombreMedicina" class="product-image">
        </div>

        <form>
            <label for="nombre">Nombre de la Medicina</label>
            <input type="text" id="nombre" name="nombre" class="info-input" value="@Model.NombreMedicina" disabled>

            <label for="detalle">Detalle</label>
            <textarea id="detalle" name="detalle" class="info-textarea" disabled>@Model.Detalle</textarea>

            <label for="precio">Precio</label>
            <input type="text" id="precio" name="precio" class="info-input" value="$@Model.ValorUnitario" disabled>

            <!-- Botón de comprar, agrega al carrito -->
            <button type="button" class="buy-button" onclick="agregarAlCarrito(@Model.Id, '@Model.NombreMedicina', @Model.ValorUnitario)">Comprar</button>
        </form>

    </div>

    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>

    <script>
        function agregarAlCarrito(id, nombre, precio) {
            // Obtener carrito del LocalStorage
            let carrito = JSON.parse(localStorage.getItem("carrito")) || [];

            // Crear objeto para el producto
            let producto = {
                id: id,
                nombre: nombre,
                precio: precio,
                cantidad: 1
            };

            // Verificar si el producto ya está en el carrito
            let index = carrito.findIndex(item => item.id === id);
            if (index > -1) {
                // Si el producto ya existe, aumentar la cantidad
                carrito[index].cantidad += 1;
            } else {
                // Si no existe, agregarlo al carrito
                carrito.push(producto);
            }

            // Guardar el carrito actualizado en LocalStorage
            localStorage.setItem("carrito", JSON.stringify(carrito));

            // Redirigir al carrito
            window.location.href = '/carrito/carrito';  // Aquí va la URL que maneja el carrito
        }
    </script>
</body>
</html>
